<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>Sobre</value>
  </data>
  <data name="AboutUs" xml:space="preserve">
    <value>Tudo começou numa das primeiras aulas de composição web na Universidade da Beira Interior, Covilhã. O professor tinha sugerido grupos para fazer uma página web, e como ainda era o início, ainda não nos conhecíamos, bem como a muita gente da turma. Foi o próprio professor que acabou por sugerir que trabalhássemos em conjunto. O nosso gosto por viajar e aventura acabou por nos levar ao tema do projecto: uma comunidade online de viajantes que pudesse ver no “Travel Site” uma forma de partilhar as suas experiências, fotografias e conhecer novos lugares. Tudo num só sítio. Um site feito para a comunidade e da comunidade. Unimos esforços para construir aquilo que cremos que seja o “Melhor site de viagens da comunidade web”, o nosso slogan. Com contínuos melhoramentos e uma visão dinâmica, esperamos tornar a nossa comunidade numa das maiores online, e que cada utilizador, cumprindo as regras de bom funcionamento de respeito, tire partido do melhor das nossas funcionalidades para que possamos atingir esse objectivo. 
Venha viajar connosco!</value>
  </data>
  <data name="Accept" xml:space="preserve">
    <value>Aceitar</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Adicionar</value>
  </data>
  <data name="AddComment" xml:space="preserve">
    <value>Adicionar um comentário</value>
  </data>
  <data name="addedby" xml:space="preserve">
    <value>Adicionado por</value>
  </data>
  <data name="AddRanking" xml:space="preserve">
    <value>Adicionar Ranking</value>
  </data>
  <data name="BacktoList" xml:space="preserve">
    <value>Voltar à Lista</value>
  </data>
  <data name="BestRankingPlaces" xml:space="preserve">
    <value>Ranking dos Melhores Lugares</value>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>Comentários</value>
  </data>
  <data name="CommentsAddedByUser" xml:space="preserve">
    <value>Comentários adicionados pelo utilizador</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>Contactos</value>
  </data>
  <data name="ContentInEnglish" xml:space="preserve">
    <value>Conteúdo em Inglês</value>
  </data>
  <data name="ContentInPolish" xml:space="preserve">
    <value>Conteúdo em Polaco</value>
  </data>
  <data name="ContentInPortuguese" xml:space="preserve">
    <value>Conteúdo em Português</value>
  </data>
  <data name="Countries" xml:space="preserve">
    <value>Países</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>País</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Criar</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Detalhes</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="EditPlace" xml:space="preserve">
    <value>Editar Lugar</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>Inglês</value>
  </data>
  <data name="Footer" xml:space="preserve">
    <value>O melhor site de viagens de sempre, por Tiago &amp; Lukasz</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Língua</value>
  </data>
  <data name="MostPopularPlaces" xml:space="preserve">
    <value>Lugares Mais Populares</value>
  </data>
  <data name="MostUnknownPlaces" xml:space="preserve">
    <value>Lugares Mais Desconhecidos</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nome</value>
  </data>
  <data name="NewestPlaces" xml:space="preserve">
    <value>Novos Lugares</value>
  </data>
  <data name="Places" xml:space="preserve">
    <value>Locais</value>
  </data>
  <data name="PlacesAddedByUser" xml:space="preserve">
    <value>Lugares adicionados pelo utilizador</value>
  </data>
  <data name="PlacesnotAccepted" xml:space="preserve">
    <value>Lugares não aceites</value>
  </data>
  <data name="PlacesVisitedByUser" xml:space="preserve">
    <value>Lugares visitados pelo utilizador</value>
  </data>
  <data name="Polish" xml:space="preserve">
    <value>Polaco</value>
  </data>
  <data name="Portuguese" xml:space="preserve">
    <value>Português</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Registo</value>
  </data>
  <data name="RemoveVisit" xml:space="preserve">
    <value>Remover visita</value>
  </data>
  <data name="ReviewIt" xml:space="preserve">
    <value>Fazer um review</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Guardar</value>
  </data>
  <data name="Score" xml:space="preserve">
    <value>Pontos</value>
  </data>
  <data name="See" xml:space="preserve">
    <value>Ver</value>
  </data>
  <data name="SeeMore" xml:space="preserve">
    <value>Ver mais</value>
  </data>
  <data name="SignIn" xml:space="preserve">
    <value>Entre</value>
  </data>
  <data name="SignOut" xml:space="preserve">
    <value>Sair</value>
  </data>
  <data name="SiteSubTitle" xml:space="preserve">
    <value>A melhor comunidade de viagens da web</value>
  </data>
  <data name="SiteTitle" xml:space="preserve">
    <value>Site de Viagens</value>
  </data>
  <data name="UserDetails" xml:space="preserve">
    <value>Detalhes do utilizador</value>
  </data>
  <data name="Visited" xml:space="preserve">
    <value>Visitado</value>
  </data>
  <data name="ClearFilter" xml:space="preserve">
    <value>Limpar Filtro</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filtrar</value>
  </data>
  <data name="BirthDate" xml:space="preserve">
    <value>Data de nascimento</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>Nome</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Apelido</value>
  </data>
</root>